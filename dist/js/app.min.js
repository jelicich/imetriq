/*! imetriq v1.0.0 | (c) 2020  | ISC License | git+https://github.com/jelicich/imetriq.git */
!(function(){"use strict";const e=window.imetriq={components:["header","footer"],init:function(){console.log("init!"),window.scrollTo(0,0);try{this.initComponents()}catch(e){console.error(e)}this.setLinksAction()},initComponents:function(){this.components.map(e=>{if(!this[e].init)throw"Component must have init fn.";this[e].init()})},setLinksAction:function(){document.querySelectorAll("a.scroll-to").forEach(e=>{e.onclick=function(e){e.preventDefault();const t=this.getAttribute("href"),i={duration:1,scrollTo:document.querySelector(t).offsetTop,ease:"power2.inOut"};gsap.to(window,i)}})}};window.onload=function(){e.init()}})(),(function(){"use strict";const e=window.imetriq;e.footer={element:document.querySelector("#footer"),minScroll:null,maxScroll:null,init:function(){this.setLimits(),e.utils.toggleClassOnScrollRange(this.element,"Footer--dark",[this.minScroll,this.maxScroll]),this.setScrollBehaviour()},setLimits:function(){const e=document.querySelector("#solutions").getBoundingClientRect().top,t=document.querySelector("#how-it-works").getBoundingClientRect().bottom;this.minScroll=e-this.element.getBoundingClientRect().bottom+this.element.offsetHeight/2,this.maxScroll=t-this.element.getBoundingClientRect().top-this.element.offsetHeight/2},setScrollBehaviour:function(){window.addEventListener("scroll",()=>{e.utils.toggleClassOnScrollRange(this.element,"Footer--dark",[this.minScroll,this.maxScroll])})}}})(),(function(){"use strict";const e=window.imetriq,t=".SiteHeader-nav a, .SiteHeader-logoContainer a";e.header={element:document.querySelector("#site-header"),init:function(){console.log("init header!"),this.setLimits(),e.utils.toggleClassOnScrollRange(this.element,"SiteHeader--dark",[this.minScroll,this.maxScroll]),this.setScrollBehaviour(),this.setHamburgerButton(),this.setMobileLinks(),this.startIntersectionObserver()},setScrollBehaviour:function(){window.addEventListener("scroll",()=>{e.utils.toggleClassOnScrollRange(this.element,"SiteHeader--dark",[this.minScroll,this.maxScroll])})},setLimits:function(){const e=document.querySelector("#solutions").getBoundingClientRect().top,t=document.querySelector("#how-it-works").getBoundingClientRect().bottom;this.minScroll=e-this.element.getBoundingClientRect().bottom+this.element.offsetHeight/2,this.maxScroll=t-this.element.getBoundingClientRect().top-this.element.offsetHeight/2},setHamburgerButton:function(){this.element.querySelector(".SiteHeader-hamburger").onclick=(()=>{this.toggleMobileMenuClasses()})},setMobileLinks:function(){this.element.querySelectorAll(".SiteHeader-mobileNav a, .SiteHeader-logoContainer a").forEach(e=>{e.addEventListener("click",()=>{this.toggleMobileMenuClasses()})})},toggleMobileMenuClasses:function(){this.element.querySelector(".SiteHeader-hamburger").classList.toggle("isActive"),this.element.querySelector(".SiteHeader-mobileMenu").classList.toggle("isActive"),document.body.classList.toggle("isBlocked"),document.documentElement.classList.toggle("isBlocked")},startIntersectionObserver:function(){this.element.querySelectorAll(t).forEach(t=>{new IntersectionObserver(function(t){if(t[0].isIntersecting){const i="#"+t[0].target.getAttribute("id");e.header.setActiveLink(i)}for(const e of t)console.log(e.isIntersecting,e.intersectionRatio)},{root:document.querySelector("main"),threshold:.65}).observe(document.querySelector(t.getAttribute("href")))})},setActiveLink:function(e){this.element.querySelectorAll(`${t}, .SiteHeader-mobileNav a, .SiteHeader-logoContainer a`).forEach(t=>{t.getAttribute("href")===e?t.classList.toggle("isActive",!0):t.classList.toggle("isActive",!1)})}}})(),(function(){"use strict";window.imetriq.utils={toggleClassOnScrollRange:function(e,t,i){window.scrollY>=i[0]&&window.scrollY<i[1]?e.classList.toggle(t,!0):e.classList.toggle(t,!1)}}})();